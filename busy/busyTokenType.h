#ifndef __BUSY_TOKENTYPE__
#define __BUSY_TOKENTYPE__
// This file was automatically generated by EbnfStudio; don't modify it!


#include <QByteArray>

namespace busy {
	enum TokenType {
		Tok_Invalid = 0,

		TT_Literals,
		Tok_Bang,
		Tok_BangEq,
		Tok_Hash,
		Tok_2Hash,
		Tok_Dlr,
		Tok_Percent,
		Tok_Amp,
		Tok_2Amp,
		Tok_Lpar,
		Tok_Rpar,
		Tok_Star,
		Tok_Rcmt,
		Tok_StarEq,
		Tok_Plus,
		Tok_PlusEq,
		Tok_Comma,
		Tok_Minus,
		Tok_MinusEq,
		Tok_Dot,
		Tok_Slash,
		Tok_Lcmt,
		Tok_Colon,
		Tok_ColonEq,
		Tok_Semi,
		Tok_Lt,
		Tok_Leq,
		Tok_Eq,
		Tok_2Eq,
		Tok_Gt,
		Tok_Geq,
		Tok_Qmark,
		Tok_Lbrack,
		Tok_LbrackRbrack,
		Tok_Rbrack,
		Tok_Hat,
		Tok_60,
		Tok_Lbrace,
		Tok_2Bar,
		Tok_Rbrace,

		TT_Keywords,
		Tok_begin,
		Tok_class,
		Tok_define,
		Tok_else,
		Tok_elsif,
		Tok_end,
		Tok_false,
		Tok_if,
		Tok_import,
		Tok_in,
		Tok_include,
		Tok_let,
		Tok_param,
		Tok_subdir,
		Tok_submod,
		Tok_submodule,
		Tok_then,
		Tok_true,
		Tok_type,
		Tok_var,

		TT_Specials,
		Tok_ident,
		Tok_string,
		Tok_integer,
		Tok_real,
		Tok_path,
		Tok_symbol,
		Tok_Eof,

		TT_MaxToken,

		TT_Max
	};

	const char* tokenTypeString( int ); // Pretty with punctuation chars
	const char* tokenTypeName( int ); // Just the names without punctuation chars
	bool tokenTypeIsLiteral( int );
	bool tokenTypeIsKeyword( int );
	bool tokenTypeIsSpecial( int );
	TokenType tokenTypeFromString( const QByteArray& str, int* pos = 0 );
}
#endif // __BUSY_TOKENTYPE__
